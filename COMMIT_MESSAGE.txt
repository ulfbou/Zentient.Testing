chore(release): prepare alpha pre-release packaging, CI signing, docs and API alignment

Summary:
- Add package metadata (PackageId, Version, Authors, License, repository metadata) and enable package generation for both Zentient.Testing and Zentient.Abstractions.Testing projects so they are packable as 0.1.0-alpha.1.
- Explicitly set IsPackable and GenerateDocumentationFile where appropriate.
- Update CI workflow (.github/workflows/ci-cd.yml):
  - Use tests/Zentient.Testing.Tests.csproj as the SOLUTION for restore/build/test in this repo.
  - Keep matrix for .NET 8 and .NET 9, build/test/coverage/pack stages, GitVersion integration and package validation for net8.0/net9.0 outputs.
  - Implement sign-symbols job to create fully signed artifacts using a base64-encoded PFX (SIGNING_KEY) and SIGNING_PASSWORD secrets, sign all .nupkg and .snupkg using `dotnet nuget sign`, verify signatures and securely remove the temporary certificate.
  - Ensure pack/publish/prerelease flows remain intact and that NUGET_API_KEY is used for pushing packages.
- Add README and CHANGELOG updates with sample usage snippets and release/signing guidance.
- Implement XML documentation comments for public interfaces in Zentient.Abstractions.Testing to satisfy documentation generation (CS1591) and enable clean package docs.
- Minor API alignment: rename IResultAssertions.WithProperty -> With and chaining property AndAlso -> And to better match the spec DSL. Adjusted interface file accordingly.
- Add Xunit shim XML docs to avoid CS1591 when generating docs for the test harness.

Motivation:
Prepare the repository for an alpha pre-release per docs/internal/Specification.md. This commit makes the packages packable, documents public APIs, and implements an automated CI signing flow that uses secure repository secrets. The signing approach supports both immediate base64-PFX secret usage and can be replaced with an OIDC/Azure Key Vault flow later for increased security.

Notes:
- The commit only modifies files locally and does not push to remote.
- To publish packages from CI, set the following repository secrets:
  - NUGET_API_KEY: API key for nuget.org
  - SIGNING_KEY: base64-encoded PFX containing the private key (or implement OIDC/Azure Key Vault instead)
  - SIGNING_PASSWORD: password for the PFX
- Recommended follow-ups: add examples/ runnable sample projects, implement OIDC key retrieval from Azure Key Vault, rotate/replace PFX usage with ephemeral keys.

Files changed (high level):
- src/Zentient.Testing/Zentient.Testing.csproj
- src/Zentient.Abstractions.Testing/Zentient.Abstractions.Testing.csproj
- .github/workflows/ci-cd.yml
- README.md
- CHANGELOG.md
- src/Zentient.Abstractions.Testing/IMockBuilder{T}.cs (XML docs + API alignment)
- src/Zentient.Testing/XunitShim.cs (XML docs)

Signed-off-by: GitHub Copilot <copilot@example.com>